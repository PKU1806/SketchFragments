{
  "header_types" : [
    {
      "name" : "scalars_0",
      "id" : 0,
      "fields" : [
        ["metadata.ipv4_srcPort", 16, false],
        ["metadata.ipv4_dstPort", 16, false],
        ["metadata.array_index1", 32, false],
        ["metadata.array_index2", 32, false],
        ["metadata.array_index0", 32, false],
        ["metadata.array_index3", 32, false],
        ["metadata.array_index4", 32, false],
        ["metadata.array_index5", 32, false],
        ["metadata.array_value0", 32, false],
        ["metadata.array_value1", 32, false],
        ["metadata.array_value2", 32, false],
        ["metadata.array_value3", 32, false],
        ["metadata.array_value4", 32, false],
        ["metadata.array_value5", 32, false],
        ["metadata.SFH_index", 32, false],
        ["metadata.MIH_index", 32, false],
        ["metadata.SFH_random", 32, false],
        ["metadata.timestamp_index0", 32, false],
        ["metadata.timestamp_index1", 32, false],
        ["metadata.timestamp_index2", 32, false],
        ["metadata.timestamp_value0", 48, false],
        ["metadata.timestamp_value1", 48, false],
        ["metadata.timestamp_value2", 48, false],
        ["metadata.counter_index0", 32, false],
        ["metadata.counter_index1", 32, false],
        ["metadata.counter_index2", 32, false],
        ["metadata.counter_index3", 32, false],
        ["metadata.counter_value0", 1, false],
        ["metadata.counter_value1", 1, false],
        ["metadata.counter_value2", 1, false],
        ["metadata.MIH_value0", 48, false],
        ["metadata.MIH_value1", 48, false],
        ["metadata.MIH_value2", 48, false],
        ["metadata.max_interval_value0", 48, false],
        ["metadata.max_interval_value1", 48, false],
        ["metadata.max_interval_value2", 48, false],
        ["metadata.switch_id", 16, false],
        ["metadata.switch_delay", 48, false],
        ["metadata.sketch_fg", 8, false],
        ["metadata.swap_control", 8, false],
        ["metadata.delay_lev", 32, false],
        ["metadata.previous_ingress_global_timestamp", 48, false],
        ["metadata.interval", 48, false],
        ["metadata.SFH_target_array", 8, false],
        ["metadata.SFH_target_bucket", 32, false],
        ["metadata.MIH_target_array", 8, false],
        ["metadata.MIH_target_bucket", 32, false],
        ["metadata.random_number", 32, false],
        ["metadata.ecmp_hash", 14, false],
        ["metadata.ecmp_group_id", 14, false],
        ["metadata.tmp00", 32, false],
        ["metadata.tmp01", 32, false],
        ["metadata.tmp02", 32, false],
        ["metadata.tmp03", 32, false],
        ["metadata.tmp04", 32, false],
        ["metadata.tmp05", 32, false],
        ["metadata.tmp06", 32, false],
        ["metadata.tmp07", 32, false],
        ["metadata.tmp08", 32, false],
        ["metadata.tmp09", 32, false],
        ["metadata.tmp10", 32, false],
        ["metadata.tmp11", 32, false],
        ["metadata.tmp12", 32, false],
        ["metadata.tmp13", 32, false],
        ["metadata.tmp14", 32, false],
        ["metadata.tmp15", 32, false],
        ["metadata.tmp16", 32, false],
        ["metadata.tmp17", 32, false],
        ["metadata.tmp18", 32, false],
        ["metadata.tmp19", 32, false],
        ["metadata.tmp20", 32, false],
        ["metadata.tmp21", 32, false],
        ["metadata.tmp22", 32, false],
        ["metadata.tmp23", 32, false],
        ["metadata.tmp24", 32, false],
        ["metadata.tmp25", 32, false],
        ["metadata.tmp26", 32, false],
        ["metadata.tmp27", 32, false],
        ["metadata.tmp28", 32, false],
        ["metadata.tmp29", 32, false],
        ["_padding_0", 1, false]
      ]
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "fields" : [
        ["ingress_port", 9, false],
        ["egress_spec", 9, false],
        ["egress_port", 9, false],
        ["clone_spec", 32, false],
        ["instance_type", 32, false],
        ["drop", 1, false],
        ["recirculate_port", 16, false],
        ["packet_length", 32, false],
        ["enq_timestamp", 32, false],
        ["enq_qdepth", 19, false],
        ["deq_timedelta", 32, false],
        ["deq_qdepth", 19, false],
        ["qid", 5, false],
        ["priority", 3, false],
        ["ingress_global_timestamp", 48, false],
        ["egress_global_timestamp", 48, false],
        ["lf_field_list", 32, false],
        ["mcast_grp", 16, false],
        ["resubmit_flag", 32, false],
        ["egress_rid", 16, false],
        ["checksum_error", 1, false],
        ["recirculate_flag", 32, false],
        ["parser_error", 32, false],
        ["_padding", 5, false]
      ]
    },
    {
      "name" : "ethernet_t",
      "id" : 2,
      "fields" : [
        ["dstAddr", 48, false],
        ["srcAddr", 48, false],
        ["etherType", 16, false]
      ]
    },
    {
      "name" : "ipv4_t",
      "id" : 3,
      "fields" : [
        ["version", 4, false],
        ["ihl", 4, false],
        ["dscp", 6, false],
        ["ecn", 2, false],
        ["totalLen", 16, false],
        ["identification", 16, false],
        ["flags", 3, false],
        ["fragOffset", 13, false],
        ["ttl", 8, false],
        ["protocol", 8, false],
        ["hdrChecksum", 16, false],
        ["srcAddr", 32, false],
        ["dstAddr", 32, false]
      ]
    },
    {
      "name" : "tcp_t",
      "id" : 4,
      "fields" : [
        ["srcPort", 16, false],
        ["dstPort", 16, false],
        ["seqNo", 32, false],
        ["ackNo", 32, false],
        ["dataOffset", 4, false],
        ["MIH_fg", 1, false],
        ["SFH_fg", 1, false],
        ["SFH_sketch_number", 1, false],
        ["res", 1, false],
        ["cwr", 1, false],
        ["ece", 1, false],
        ["urg", 1, false],
        ["ack", 1, false],
        ["psh", 1, false],
        ["rst", 1, false],
        ["syn", 1, false],
        ["fin", 1, false],
        ["window", 16, false],
        ["checksum", 16, false],
        ["urgentPtr", 16, false]
      ]
    },
    {
      "name" : "udp_t",
      "id" : 5,
      "fields" : [
        ["srcPort", 16, false],
        ["dstPort", 16, false],
        ["length", 16, false],
        ["checksum", 16, false]
      ]
    },
    {
      "name" : "FLAG_t",
      "id" : 6,
      "fields" : [
        ["ingress_timestamp", 48, false],
        ["egress_timestamp", 48, false]
      ]
    }
  ],
  "headers" : [
    {
      "name" : "scalars",
      "id" : 0,
      "header_type" : "scalars_0",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "header_type" : "standard_metadata",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "ethernet",
      "id" : 2,
      "header_type" : "ethernet_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ipv4",
      "id" : 3,
      "header_type" : "ipv4_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "tcp",
      "id" : 4,
      "header_type" : "tcp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "udp",
      "id" : 5,
      "header_type" : "udp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "flag",
      "id" : 6,
      "header_type" : "FLAG_t",
      "metadata" : false,
      "pi_omit" : true
    }
  ],
  "header_stacks" : [],
  "header_union_types" : [],
  "header_unions" : [],
  "header_union_stacks" : [],
  "field_lists" : [],
  "errors" : [
    ["NoError", 1],
    ["PacketTooShort", 2],
    ["NoMatch", 3],
    ["StackOutOfBounds", 4],
    ["HeaderTooShort", 5],
    ["ParserTimeout", 6]
  ],
  "enums" : [],
  "parsers" : [
    {
      "name" : "parser",
      "id" : 0,
      "init_state" : "start",
      "parse_states" : [
        {
          "name" : "start",
          "id" : 0,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ethernet"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0800",
              "mask" : null,
              "next_state" : "parse_ipv4"
            },
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            }
          ]
        },
        {
          "name" : "parse_ipv4",
          "id" : 1,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ipv4"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x06",
              "mask" : null,
              "next_state" : "parse_tcp"
            },
            {
              "type" : "hexstr",
              "value" : "0x11",
              "mask" : null,
              "next_state" : "parse_udp"
            },
            {
              "type" : "hexstr",
              "value" : "0x01",
              "mask" : null,
              "next_state" : null
            },
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ]
        },
        {
          "name" : "parse_tcp",
          "id" : 2,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "tcp"
                }
              ],
              "op" : "extract"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "metadata.ipv4_srcPort"]
                },
                {
                  "type" : "field",
                  "value" : ["tcp", "srcPort"]
                }
              ],
              "op" : "set"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "metadata.ipv4_dstPort"]
                },
                {
                  "type" : "field",
                  "value" : ["tcp", "dstPort"]
                }
              ],
              "op" : "set"
            }
          ],
          "transitions" : [
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_udp",
          "id" : 3,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "udp"
                }
              ],
              "op" : "extract"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "metadata.ipv4_srcPort"]
                },
                {
                  "type" : "field",
                  "value" : ["udp", "srcPort"]
                }
              ],
              "op" : "set"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "metadata.ipv4_dstPort"]
                },
                {
                  "type" : "field",
                  "value" : ["udp", "dstPort"]
                }
              ],
              "op" : "set"
            },
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "flag"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        }
      ]
    }
  ],
  "parse_vsets" : [],
  "deparsers" : [
    {
      "name" : "deparser",
      "id" : 0,
      "source_info" : {
        "filename" : "././parsers.p4",
        "line" : 81,
        "column" : 8,
        "source_fragment" : "MyDeparser"
      },
      "order" : ["ethernet", "ipv4", "tcp", "udp", "flag"]
    }
  ],
  "meter_arrays" : [],
  "counter_arrays" : [],
  "register_arrays" : [],
  "calculations" : [
    {
      "name" : "calc",
      "id" : 0,
      "algo" : "crc16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "metadata.ipv4_srcPort"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "metadata.ipv4_dstPort"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        }
      ]
    },
    {
      "name" : "calc_0",
      "id" : 1,
      "source_info" : {
        "filename" : "./ecmp.p4",
        "line" : 152,
        "column" : 2,
        "source_fragment" : "update_checksum( ..."
      },
      "algo" : "csum16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "version"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ihl"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dscp"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ecn"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "totalLen"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "identification"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "flags"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "fragOffset"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ttl"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        }
      ]
    },
    {
      "name" : "calc_1",
      "id" : 2,
      "source_info" : {
        "filename" : "./ecmp.p4",
        "line" : 171,
        "column" : 2,
        "source_fragment" : "update_checksum_with_payload( ..."
      },
      "algo" : "csum16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        },
        {
          "type" : "hexstr",
          "value" : "0x00",
          "bitwidth" : 8
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["udp", "length"]
        },
        {
          "type" : "field",
          "value" : ["udp", "srcPort"]
        },
        {
          "type" : "field",
          "value" : ["udp", "dstPort"]
        },
        {
          "type" : "field",
          "value" : ["udp", "length"]
        },
        {
          "type" : "header",
          "value" : "flag"
        },
        {
          "type" : "payload",
          "value" : null
        }
      ]
    }
  ],
  "learn_lists" : [],
  "actions" : [
    {
      "name" : "NoAction",
      "id" : 0,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "MyIngress.drop",
      "id" : 1,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "drop",
          "parameters" : [],
          "source_info" : {
            "filename" : "./ecmp.p4",
            "line" : 33,
            "column" : 2,
            "source_fragment" : "mark_to_drop()"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.drop",
      "id" : 2,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "drop",
          "parameters" : [],
          "source_info" : {
            "filename" : "./ecmp.p4",
            "line" : 33,
            "column" : 2,
            "source_fragment" : "mark_to_drop()"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.drop",
      "id" : 3,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "drop",
          "parameters" : [],
          "source_info" : {
            "filename" : "./ecmp.p4",
            "line" : 33,
            "column" : 2,
            "source_fragment" : "mark_to_drop()"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.ecmp_group",
      "id" : 4,
      "runtime_data" : [
        {
          "name" : "ecmp_group_id",
          "bitwidth" : 14
        },
        {
          "name" : "num_nhops",
          "bitwidth" : 16
        }
      ],
      "primitives" : [
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.ecmp_hash"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            },
            {
              "type" : "calculation",
              "value" : "calc"
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "./ecmp.p4",
            "line" : 38,
            "column" : 2,
            "source_fragment" : "hash(meta.ecmp_hash, ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.ecmp_group_id"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "./ecmp.p4",
            "line" : 48,
            "column" : 2,
            "source_fragment" : "meta.ecmp_group_id = ecmp_group_id"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.set_nhop",
      "id" : 5,
      "runtime_data" : [
        {
          "name" : "dstAddr",
          "bitwidth" : 48
        },
        {
          "name" : "port",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "srcAddr"]
            },
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "./ecmp.p4",
            "line" : 54,
            "column" : 2,
            "source_fragment" : "hdr.ethernet.srcAddr = hdr.ethernet.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "./ecmp.p4",
            "line" : 56,
            "column" : 2,
            "source_fragment" : "hdr.ethernet.dstAddr = dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "./ecmp.p4",
            "line" : 58,
            "column" : 2,
            "source_fragment" : "standard_metadata.egress_spec = port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "ttl"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "ttl"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "./ecmp.p4",
            "line" : 60,
            "column" : 2,
            "source_fragment" : "hdr.ipv4.ttl = hdr.ipv4.ttl - 1"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.set_nhop",
      "id" : 6,
      "runtime_data" : [
        {
          "name" : "dstAddr",
          "bitwidth" : 48
        },
        {
          "name" : "port",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "srcAddr"]
            },
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "./ecmp.p4",
            "line" : 54,
            "column" : 2,
            "source_fragment" : "hdr.ethernet.srcAddr = hdr.ethernet.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "./ecmp.p4",
            "line" : 56,
            "column" : 2,
            "source_fragment" : "hdr.ethernet.dstAddr = dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "./ecmp.p4",
            "line" : 58,
            "column" : 2,
            "source_fragment" : "standard_metadata.egress_spec = port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "ttl"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "ttl"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "./ecmp.p4",
            "line" : 60,
            "column" : 2,
            "source_fragment" : "hdr.ipv4.ttl = hdr.ipv4.ttl - 1"
          }
        }
      ]
    },
    {
      "name" : "act",
      "id" : 7,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "flag"
            }
          ],
          "source_info" : {
            "filename" : "./ecmp.p4",
            "line" : 131,
            "column" : 4,
            "source_fragment" : "hdr.flag.setValid()"
          }
        }
      ]
    },
    {
      "name" : "act_0",
      "id" : 8,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["flag", "ingress_timestamp"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_global_timestamp"]
            }
          ],
          "source_info" : {
            "filename" : "./ecmp.p4",
            "line" : 133,
            "column" : 3,
            "source_fragment" : "hdr.flag.ingress_timestamp=standard_metadata.ingress_global_timestamp"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["flag", "egress_timestamp"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_global_timestamp"]
            }
          ],
          "source_info" : {
            "filename" : "./ecmp.p4",
            "line" : 134,
            "column" : 3,
            "source_fragment" : "hdr.flag.egress_timestamp=standard_metadata.egress_global_timestamp"
          }
        }
      ]
    }
  ],
  "pipelines" : [
    {
      "name" : "ingress",
      "id" : 0,
      "source_info" : {
        "filename" : "./ecmp.p4",
        "line" : 26,
        "column" : 8,
        "source_fragment" : "MyIngress"
      },
      "init_table" : "node_2",
      "tables" : [
        {
          "name" : "MyIngress.ipv4_lpm",
          "id" : 0,
          "source_info" : {
            "filename" : "./ecmp.p4",
            "line" : 76,
            "column" : 7,
            "source_fragment" : "ipv4_lpm"
          },
          "key" : [
            {
              "match_type" : "lpm",
              "name" : "hdr.ipv4.dstAddr",
              "target" : ["ipv4", "dstAddr"],
              "mask" : null
            }
          ],
          "match_type" : "lpm",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [6, 4, 2],
          "actions" : ["MyIngress.set_nhop", "MyIngress.ecmp_group", "MyIngress.drop"],
          "base_default_next" : null,
          "next_tables" : {
            "MyIngress.ecmp_group" : "MyIngress.ecmp_group_to_nhop",
            "MyIngress.set_nhop" : null,
            "MyIngress.drop" : null
          },
          "default_entry" : {
            "action_id" : 2,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "MyIngress.ecmp_group_to_nhop",
          "id" : 1,
          "source_info" : {
            "filename" : "./ecmp.p4",
            "line" : 63,
            "column" : 7,
            "source_fragment" : "ecmp_group_to_nhop"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "meta.ecmp_group_id",
              "target" : ["scalars", "metadata.ecmp_group_id"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "meta.ecmp_hash",
              "target" : ["scalars", "metadata.ecmp_hash"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [1, 5, 0],
          "actions" : ["MyIngress.drop", "MyIngress.set_nhop", "NoAction"],
          "base_default_next" : null,
          "next_tables" : {
            "MyIngress.drop" : null,
            "MyIngress.set_nhop" : null,
            "NoAction" : null
          },
          "default_entry" : {
            "action_id" : 0,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_drop",
          "id" : 2,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [3],
          "actions" : ["MyIngress.drop"],
          "base_default_next" : null,
          "next_tables" : {
            "MyIngress.drop" : null
          },
          "default_entry" : {
            "action_id" : 3,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_2",
          "id" : 0,
          "source_info" : {
            "filename" : "./ecmp.p4",
            "line" : 101,
            "column" : 6,
            "source_fragment" : "hdr.ipv4.isValid()&&hdr.ipv4.ttl > 1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["ipv4", "$valid$"]
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : ">",
                  "left" : {
                    "type" : "field",
                    "value" : ["ipv4", "ttl"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  }
                }
              }
            }
          },
          "true_next" : "MyIngress.ipv4_lpm",
          "false_next" : "tbl_drop"
        }
      ]
    },
    {
      "name" : "egress",
      "id" : 1,
      "source_info" : {
        "filename" : "./ecmp.p4",
        "line" : 121,
        "column" : 8,
        "source_fragment" : "MyEgress"
      },
      "init_table" : "node_8",
      "tables" : [
        {
          "name" : "tbl_act",
          "id" : 3,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [7],
          "actions" : ["act"],
          "base_default_next" : "tbl_act_0",
          "next_tables" : {
            "act" : "tbl_act_0"
          },
          "default_entry" : {
            "action_id" : 7,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_act_0",
          "id" : 4,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [8],
          "actions" : ["act_0"],
          "base_default_next" : null,
          "next_tables" : {
            "act_0" : null
          },
          "default_entry" : {
            "action_id" : 8,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_8",
          "id" : 1,
          "source_info" : {
            "filename" : "./ecmp.p4",
            "line" : 129,
            "column" : 5,
            "source_fragment" : "hdr.ipv4.isValid()&&hdr.udp.isValid()&&standard_metadata.instance_type ==0&&hdr.ipv4.ttl > 1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "and",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "d2b",
                          "left" : null,
                          "right" : {
                            "type" : "field",
                            "value" : ["ipv4", "$valid$"]
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "d2b",
                          "left" : null,
                          "right" : {
                            "type" : "field",
                            "value" : ["udp", "$valid$"]
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "instance_type"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000"
                      }
                    }
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : ">",
                  "left" : {
                    "type" : "field",
                    "value" : ["ipv4", "ttl"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  }
                }
              }
            }
          },
          "false_next" : null,
          "true_next" : "node_9"
        },
        {
          "name" : "node_9",
          "id" : 2,
          "source_info" : {
            "filename" : "./ecmp.p4",
            "line" : 130,
            "column" : 6,
            "source_fragment" : "!hdr.flag.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "not",
              "left" : null,
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["flag", "$valid$"]
                  }
                }
              }
            }
          },
          "true_next" : "tbl_act",
          "false_next" : "tbl_act_0"
        }
      ]
    }
  ],
  "checksums" : [
    {
      "name" : "cksum",
      "id" : 0,
      "source_info" : {
        "filename" : "./ecmp.p4",
        "line" : 152,
        "column" : 2,
        "source_fragment" : "update_checksum( ..."
      },
      "target" : ["ipv4", "hdrChecksum"],
      "type" : "generic",
      "calculation" : "calc_0",
      "verify" : false,
      "update" : true,
      "if_cond" : {
        "type" : "expression",
        "value" : {
          "op" : "d2b",
          "left" : null,
          "right" : {
            "type" : "field",
            "value" : ["ipv4", "$valid$"]
          }
        }
      }
    },
    {
      "name" : "cksum_0",
      "id" : 1,
      "source_info" : {
        "filename" : "./ecmp.p4",
        "line" : 171,
        "column" : 2,
        "source_fragment" : "update_checksum_with_payload( ..."
      },
      "target" : ["udp", "checksum"],
      "type" : "generic",
      "calculation" : "calc_1",
      "verify" : false,
      "update" : true,
      "if_cond" : {
        "type" : "expression",
        "value" : {
          "op" : "d2b",
          "left" : null,
          "right" : {
            "type" : "field",
            "value" : ["flag", "$valid$"]
          }
        }
      }
    }
  ],
  "force_arith" : [],
  "extern_instances" : [],
  "field_aliases" : [
    [
      "queueing_metadata.enq_timestamp",
      ["standard_metadata", "enq_timestamp"]
    ],
    [
      "queueing_metadata.enq_qdepth",
      ["standard_metadata", "enq_qdepth"]
    ],
    [
      "queueing_metadata.deq_timedelta",
      ["standard_metadata", "deq_timedelta"]
    ],
    [
      "queueing_metadata.deq_qdepth",
      ["standard_metadata", "deq_qdepth"]
    ],
    [
      "queueing_metadata.qid",
      ["standard_metadata", "qid"]
    ],
    [
      "intrinsic_metadata.priority",
      ["standard_metadata", "priority"]
    ],
    [
      "intrinsic_metadata.ingress_global_timestamp",
      ["standard_metadata", "ingress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.egress_global_timestamp",
      ["standard_metadata", "egress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.lf_field_list",
      ["standard_metadata", "lf_field_list"]
    ],
    [
      "intrinsic_metadata.mcast_grp",
      ["standard_metadata", "mcast_grp"]
    ],
    [
      "intrinsic_metadata.resubmit_flag",
      ["standard_metadata", "resubmit_flag"]
    ],
    [
      "intrinsic_metadata.egress_rid",
      ["standard_metadata", "egress_rid"]
    ],
    [
      "intrinsic_metadata.recirculate_flag",
      ["standard_metadata", "recirculate_flag"]
    ]
  ],
  "program" : "/home/share/SketchFragments/switch/p4src_new/ecmp.p4i",
  "__meta__" : {
    "version" : [2, 18],
    "compiler" : "https://github.com/p4lang/p4c"
  }
}